name: Install Nix and setup cache
inputs:
  nix_conf:
    description: nix_conf pass to nixbuild/nix-quick-install-action
    required: false
    default: |
      keep-derivations = true
      keep-outputs = true
  key:
    description: Key to actions/cache
    required: false
    default: nix
  nixpkgs_url:
    description: Nixpkgs URL
    required: false
    default: https://nixos.org/channels/nixos-24.05
  clean:
    description: Clean up disk space
    required: false
    default: false
  debug:
    description: Enable debug
    required: false
    default: false
  debug_token:
    default: ${{ github.token }}
    description: Set github token for gh cli
runs:
  using: composite
  steps:
  - name: Disable MDS service on macOS
    if: ${{ runner.os == 'macOS' }}
    shell: bash
    run: |
      sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist || true
  - name: Clean
    if: ${{ runner.os == 'Linux' && (inputs.clean == true || inputs.clean == 'true') }}
    shell: bash
    run: exec ${{ github.action_path }}/clean.sh
  - uses: nixbuild/nix-quick-install-action@v28
    with:
      nix_conf: ${{ inputs.nix_conf }}
  - shell: bash
    env:
      CACHE_KEY: ${{ inputs.key }}
    run: exec ${{ github.action_path }}/restore.sh pre
  - uses: actions/cache/restore@v4
    with:
      key: ${{ env.CACHE_KEY }}-${{ runner.os }}-${{ runner.arch }}-${{ env.CACHE_TIMESTAMP }}
      restore-keys: |
        ${{ env.CACHE_KEY }}-${{ runner.os }}-${{ runner.arch }}
      path: |
        /nix/store
        /nix/var
        ~/.cache/nix
        ~/.local/state/nix
  - shell: bash
    env:
      NIXPKGS_URL: ${{ inputs.nixpkgs_url }}
    run: exec ${{ github.action_path }}/restore.sh post
  - name: Debug
    if: ${{ inputs.debug == true || inputs.debug == 'true' || inputs.debug == 'nopause' }}
    shell: bash
    env:
      GH_TOKEN: ${{ inputs.debug_token }}
    run: exec ${{ github.action_path }}/debug.sh "${{ inputs.debug }}"
