name: Install Nix and setup cache
inputs:
  nix_conf:
    description: Extra nix.conf config
    default: |
      accept-flake-config = true
      build-dir = /nix/var
      experimental-features = nix-command flakes
      keep-derivations = true
      keep-outputs = true
  key:
    description: Key to actions/cache
    default: nix
  install_action:
    description: Set `nixbuild` to use nixbuild/nix-quick-install-action, otherwide use cachix/install-nix-action
    default: nixbuild
  use_nixpkgs_in_flake:
    description: Use nixpkgs defined in flake.nix
    default: true
  nixpkgs_url:
    description: Nixpkgs URL
    default: https://nixos.org/channels/nixos-24.11
  clean:
    description: Clean up disk space
    default: false
  btrfs:
    description: Use BTRFS to setup RAID0
    default: false
  debug:
    description: Enable debug
    default: false
  debug_token:
    default: ${{ github.token }}
    description: Set github token for gh cli
runs:
  using: composite
  steps:
    - shell: bash
      env:
        CLEAN: ${{ inputs.clean }}
        BTRFS: ${{ inputs.btrfs }}
      run: exec ${{ github.action_path }}/prepare.sh
    - uses: nixbuild/nix-quick-install-action@1f095fee853b33114486cfdeae62fa099cda35a9 # v33
      if: ${{ inputs.install_action == 'nixbuild' }}
      with:
        nix_conf: ${{ inputs.nix_conf }}
    - uses: cachix/install-nix-action@7be5dee1421f63d07e71ce6e0a9f8a4b07c2a487 # v31
      if: ${{ inputs.install_action != 'nixbuild' }}
      with:
        extra_nix_config: ${{ inputs.nix_conf }}
    - name: Nix restore pre
      shell: bash
      env:
        CACHE_KEY: ${{ inputs.key }}-${{ inputs.install_action }}
      run: exec ${{ github.action_path }}/restore.sh pre
    - uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      with:
        key: ${{ env.CACHE_KEY }}-${{ runner.os }}-${{ runner.arch }}-${{ env.CACHE_TIMESTAMP }}
        restore-keys: |
          ${{ env.CACHE_KEY }}-${{ runner.os }}-${{ runner.arch }}
        path: |
          /nix/store
          /nix/var/nix/db
          /nix/var/nix/gcroots
          /nix/var/nix/profiles
          ~/.cache/nix
          ~/.local/state/nix
          ~/.nix-channels
          ~/.nix-defexpr
    - name: Nix restore post
      shell: bash
      env:
        USE_NIXPKGS_IN_FLAKE: ${{ inputs.use_nixpkgs_in_flake }}
        NIXPKGS_URL: ${{ inputs.nixpkgs_url }}
      run: exec ${{ github.action_path }}/restore.sh post
    - name: Debug
      if: ${{ inputs.debug == true || inputs.debug == 'true' || inputs.debug == 'nopause' }}
      shell: bash
      env:
        DEBUG: ${{ inputs.debug }}
        GH_TOKEN: ${{ inputs.debug_token }}
      run: exec ${{ github.action_path }}/debug.sh "$DEBUG"
