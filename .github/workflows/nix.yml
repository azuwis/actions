name: Nix
permissions: {}
on:
  pull_request:
    paths:
      - 'nix/**'
      - .github/workflows/nix.yml
  push:
    paths:
      - 'nix/**'
      - .github/workflows/nix.yml
  workflow_dispatch:
    inputs:
      debug:
        description: Enable debug
        type: boolean
        required: false
        default: false
      os:
        description: Debug OS
        required: true
        type: choice
        options: 
          - '["ubuntu-latest"]'
          - '["macos-13"]'
          - '["macos-latest"]'
          - '["ubuntu-latest", "macos-13", "macos-latest"]'
jobs:
  clear_cache:
    if: ${{ ! inputs.debug }}
    permissions:
      actions: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Clear cache
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh cache delete nix- || true
  nix:
    needs: clear_cache
    if: ${{ always() && !failure() && !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ inputs.debug && fromJSON(inputs.os) || fromJSON('["ubuntu-latest", "macos-13", "macos-latest"]') }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./nix
        with:
          debug: ${{ github.event_name == 'workflow_dispatch' && inputs.debug }}
      - name: Install tools for debug
        run: |
          nix-env -f '<nixpkgs>' -iA cloudflared tmux
      - uses: ./nix/post
  nix_with_cache:
    needs: nix
    strategy:
      fail-fast: false
      matrix:
        os: ${{ inputs.debug && fromJSON(inputs.os) || fromJSON('["ubuntu-latest", "macos-13", "macos-latest"]') }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./nix
      - name: Install tools for debug
        run: |
          nix-env -f '<nixpkgs>' -iA cloudflared tmux
      - name: Test if restore from cache success
        run: |
          [ -e /nix/store.bak ] && [ ! -e /nix/store.failed ]
      - uses: ./nix/post
      - name: Test if cache does not need update
        run: |
          [ "$CACHE_NEED_UPDATE" != yes ]
