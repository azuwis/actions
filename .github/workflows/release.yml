name: Release
permissions: {}
on:
  pull_request:
    paths:
      - 'release/**'
      - '.github/workflows/release.yml'
  push:
    # Only include top-level branches, ignore branches like dependabot/*
    branches:
      - '*'
    paths:
      - 'release/**'
      - '.github/workflows/release.yml'
  workflow_dispatch:
    inputs:
      debug:
        description: Enable debug
        type: boolean
        default: false
jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: ./nix
        if: ${{ inputs.debug }}
        with:
          debug: nopause
      - name: REPL
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        if: ${{ inputs.debug }}
        with:
          script: |
            const net = require('node:net');
            const repl = require('node:repl');
            net.createServer((socket) => {
              const r = repl.start({
                prompt: '> ',
                input: socket,
                output: socket,
                terminal: true,
                useGlobal: true,
              }).on('exit', () => {
                socket.end();
              });
              r.context.context = context;
              r.context.core = core;
              r.context.exec = exec;
              r.context.github = github;
              r.context.glob = glob;
              r.context.io = io;
              r.context.require = require;
            }).listen(5001);
      - name: Prepare
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete test-release --yes || true
          echo "GH_TOKEN=$GH_TOKEN" >> "$GITHUB_ENV"
      - uses: ./release
        with:
          prerelease: true
          tag: test-release
      - run: |
          gh release delete test-release --yes
      - uses: ./release
        with:
          prerelease: true
          files: 'release/*'
          tag: test-release
      - id: timestamp
        run: |
          gh release view test-release | grep -F action.yml
          timestamp=$(gh release view test-release --json assets --jq '.assets[0].createdAt')
          test -n "$timestamp"
          echo "timestamp=$timestamp" >> "$GITHUB_OUTPUT"
      - uses: ./release
        with:
          prerelease: true
          files: 'release/*'
          tag: test-release
      - run: |
          gh release view test-release | grep -F action.yml
          timestamp=$(gh release view test-release --json assets --jq '.assets[0].createdAt')
          test -n "$timestamp"
          test "$timestamp" != "${{ steps.timestamp.outputs.timestamp }}"
      - run: |
          gh release delete test-release --yes
